package com.nfeanalytics.core.map;

import java.io.IOException;
import java.io.InputStreamReader;
import java.io.UnsupportedEncodingException;
import java.net.MalformedURLException;
import java.net.URL;
import java.net.URLEncoder;
import java.util.Iterator;
import java.util.logging.Logger;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.nfeanalytics.core.json.Coordinate;

public class GeocodingClient {

	private static final Logger	LOGGER		= Logger.getLogger(GeocodingClient.class.getName());

	private static final String	BASE_URL	= "http://maps.googleapis.com/maps/api/geocode/json?sensor=false&address=";

	public static Coordinate geocode(String address) throws IOException, JsonProcessingException {

		InputStreamReader inputStreamReader = createInputStreamFromURL(address);

		ObjectMapper mapper = new ObjectMapper();
		JsonNode rootNode = mapper.readTree(inputStreamReader);
		JsonNode location = rootNode.findPath("location");
		Iterator<JsonNode> elements = location.elements();

		if (elements.hasNext())
			return new Coordinate(elements.next().asDouble(), elements.next().asDouble());
		else {
			LOGGER.warning("### Geocoding ERROR " + address);
			return new Coordinate(0, 0);
		}
	}

	private static InputStreamReader createInputStreamFromURL(String address) throws UnsupportedEncodingException,
			MalformedURLException, IOException {

		String sUrl = BASE_URL + URLEncoder.encode(address, "UTF-8");

		URL url = new URL(sUrl);

		return new InputStreamReader(url.openStream());
	}

}
